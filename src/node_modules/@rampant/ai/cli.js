import fs from 'fs'

import argv from 'argv'
import { start, importProject, exportProject } from '@rampant/ai'
import { stringify } from 'javascript-stringify'

argv.version('v0.0.0')
argv.info('Create and run a Rampant AI project directly.')

argv.mod({
    mod: 'export',
    description: "Export the current project's intents and sources",
    options: [
        {
            name: 'path',
            short: 'p',
            type: 'path',
            description:
                'Where the intents.js and sources.js files should be stored',
            example: '--path=/path/to/folder',
        },
        {
            name: 'name',
            short: 'n',
            type: 'string',
            description: 'Name of the project to export intents/sources from',
            example: '--name=channel-name',
        },
    ],
})

argv.option([
    {
        name: 'path',
        short: 'p',
        type: 'path',
        description:
            'Where the intents.js and sources.js files exist to load for the project',
        example: '--path=/path/to/folder',
    },
    {
        name: 'name',
        short: 'n',
        type: 'string',
        description: 'Name of project to save intents/sources under',
        example: '--name=channel-name',
    },
    {
        name: 'log',
        short: 'l',
        type: 'string',
        description:
            'Level of logging to print [error, warning, platform, plugin, intent, extend, detail, debug]',
        example: '--log=level-name',
    },
])

const { mod = 'run', options: { path, name, log = 'platform' } } = argv.run()
process.env.PROJECT_ID = name

if (mod === 'run') {
    // eslint-disable-next-line import/no-dynamic-require, global-require
    const projectSettings = require(path)

    importProject(name, projectSettings).then(() =>
        start({ projectId: name, level: log })
    )
}

if (mod === 'export') {
    exportProject(name).then(project => {
        if (!fs.existsSync(path)) fs.mkdirSync(path)
        fs.writeFileSync(
            `${path}/index.js`,
            `module.exports = ${stringify(project, null, '    ')}`,
            'utf-8'
        )
    })
}
